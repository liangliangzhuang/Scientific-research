options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(
fig.width=9, fig.height=3.5, fig.retina=3,
out.width = "100%",
cache = FALSE,
echo = TRUE,
message = FALSE,
warning = FALSE,
hiline = TRUE
)
library(ggplot2) # Grammar of graphics
library(cowplot) # Arranging multiple plots into a grid
library(png)     # Load JPEG, PNG and TIFF format
library(scales)  # Generic plot scaling methods
library(viridis) # Default color maps from 'matplotlib'
library(grid)    # A rewrite of the graphics layout capabilities
library(magick)  # graphics and image processing
library(rsvg)    # Render svg image into a high quality bitmap
library(ggforce) # Collection of additional ggplot stats + geoms
data_B = read.csv("./data_B.csv")
data_B = data.frame("n"=c(data_B$n,data_B$n),
"sample"=c(rep("apical side",nrow(data_B)),
rep("basal side",nrow(data_B))),
"fraction"=c(data_B$fraction1,data_B$fraction2),
"err"=c(data_B$err1,data_B$err2)
)
head(data_B)
ggplot(data=data_B,(aes(x=n, # aes: aesthetics
y=fraction,
fill=sample)))+
geom_bar(stat = "identity",
position=position_dodge()) + # dodge overlapping objects side-to-side
stat_function(fun=logn_dist,
geom="line",
linetype="solid",
aes(x=n,
y=logn_dist(n))) +
geom_errorbar(aes(ymin=fraction-err,
ymax=fraction+err),
width=.2,
position=position_dodge(.9))
sigma = 0.14
n = seq(3,10,1)
logn_dist <- function(n) exp(-(log(n)-log(6))^2/(2*sigma^2))/(sqrt(2*pi)*sigma*n) #函数里面就是密度函数的公式，可以在数理统计相关书籍中找到。
sigma = 0.14
n = seq(3,10,1)
logn_dist <- function(n) exp(-(log(n)-log(6))^2/(2*sigma^2))/(sqrt(2*pi)*sigma*n) #函数里面就是密度函数的公式，可以在数理统计相关书籍中找到。
ggplot(data=data_B,(aes(x=n, # aes: aesthetics
y=fraction,
fill=sample)))+
geom_bar(stat = "identity",
position=position_dodge()) + # dodge overlapping objects side-to-side
stat_function(fun=logn_dist,
geom="line",
linetype="solid",
aes(x=n,
y=logn_dist(n))) +
geom_errorbar(aes(ymin=fraction-err,
ymax=fraction+err),
width=.2,
position=position_dodge(.9))
library(ggplot2) # Grammar of graphics
library(cowplot) # Arranging multiple plots into a grid
library(png)     # Load JPEG, PNG and TIFF format
library(scales)  # Generic plot scaling methods
library(viridis) # Default color maps from 'matplotlib'
library(grid)    # A rewrite of the graphics layout capabilities
library(magick)  # graphics and image processing
library(rsvg)    # Render svg image into a high quality bitmap
library(ggforce) # Collection of additional ggplot stats + geoms
data_B = read.csv("data_B.csv")
data_B = data.frame("n"=c(data_B$n,data_B$n),
"sample"=c(rep("apical side",nrow(data_B)),
rep("basal side",nrow(data_B))),
"fraction"=c(data_B$fraction1,data_B$fraction2),
"err"=c(data_B$err1,data_B$err2)
)
head(data_B)
sigma = 0.14
n = seq(3,10,1)
logn_dist <- function(n) exp(-(log(n)-log(6))^2/(2*sigma^2))/(sqrt(2*pi)*sigma*n) #函数里面就是密度函数的公式，可以在数理统计相关书籍中找到。
ggplot(data=data_B,(aes(x=n, # aes: aesthetics
y=fraction,
fill=sample)))+
geom_bar(stat = "identity",
position=position_dodge()) + # dodge overlapping objects side-to-side
stat_function(fun=logn_dist,
geom="line",
linetype="solid",
aes(x=n,
y=logn_dist(n))) +
geom_errorbar(aes(ymin=fraction-err,
ymax=fraction+err),
width=.2,
position=position_dodge(.9))
library(ggplot2)
set.seed(1)
sample_df <- data.frame(
group = factor(rep(letters[1:3], each = 10)),
value = rnorm(30)
)
group_means_df <- setNames(
aggregate(value ~ group, sample_df, mean),
c("group", "group_mean")
)
ggplot(data = sample_df, mapping = aes(x = group, y = value)) +
geom_point() +
geom_point(
mapping = aes(y = group_mean), data = group_means_df,
colour = 'red', size = 3
)
cli::cli_alert_success("It worked!")
knitr::include_graphics("figure/15.jpg")
# 数据介绍
chilean.exports = "year,product,export,percentage
2006, copper,4335009500,81
2006,others, 1016726518,19
2007,copper,9005361914,86
2007,others,1523085299,14
2008, copper,6907056354,80
2008, others, 1762684216, 20
2009,copper, 10529811075,81
2009,others,2464094241,19
2010, copper, 14828284450,85
2010,others,2543015596,15
2011,copper,15291679086,82
2011, others, 3447972354,18
2012, copper,14630686732,80
2012,others,3583968218,2(
2013,copper,15244038840,79
2013,others,4051281128,21
2014,copper,14703374241,78
2014,others, 4251484600,22
2015, copper,13155922363,78
2015, others, 3667286912, 22
"
charts.data = read_csv(chilean.exports)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(readr)
library(scales)
library(forcats)
# 数据介绍
chilean.exports = "year,product,export,percentage
2006, copper,4335009500,81
2006,others, 1016726518,19
2007,copper,9005361914,86
2007,others,1523085299,14
2008, copper,6907056354,80
2008, others, 1762684216, 20
2009,copper, 10529811075,81
2009,others,2464094241,19
2010, copper, 14828284450,85
2010,others,2543015596,15
2011,copper,15291679086,82
2011, others, 3447972354,18
2012, copper,14630686732,80
2012,others,3583968218,2(
2013,copper,15244038840,79
2013,others,4051281128,21
2014,copper,14703374241,78
2014,others, 4251484600,22
2015, copper,13155922363,78
2015, others, 3667286912, 22
"
charts.data = read_csv(chilean.exports)
charts.data = read_csv(chilean.exports,show_col_types = FALSE)
charts.data = read_csv(chilean.exports)
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) +
geom_col()
p3
head(charts.data)
charts.data
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) +
geom_col()
p3
p3 = ggplot(aes(y = export, x = year, fill = (product)), data = charts.data) +
geom_col()
p3
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) +
geom_col()
p3
## 增加数据标签
charts.data = charts.data %>%
mutate(export_label = paste(round(export/1000000000,2), "B"))
charts.data
p3 = p3 + geom_text(data = charts.data,
aes(x = year, y = export, label = export_label), size = 3)
p3 = p3 + geom_text(data = charts.data,
aes(x = year, y = export, label = export_label), size = 3)
p3
p3
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) +
geom_col()
p3
## 增加数据标签
charts.data = charts.data %>%
mutate(export_label = paste(round(export/1000000000,2), "B"))
p3 = p3 + geom_text(data = charts.data,
aes(x = year, y = export, label = export_label), size = 3)
p3
## 调整数据标签位置
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p3 = p3 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 3)
p3
## 调整数据标签位置
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p3 = p3 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 3)
p3
## 调整数据标签位置
p4 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p4 = p4 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 3)
p4
p4 = p4 + geom_text(aes(label = export_label), position = position_stack(vjust = 2), size = 3)
p4
## 调整数据标签位置
p4 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p4 = p4 + geom_text(aes(label = export_label), position = position_stack(vjust = 2), size = 3)
p4
p4 = p4 + geom_text(aes(label = export_label), position = position_stack(vjust = -1), size = 3)
p4
## 调整数据标签位置
p4 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p4 = p4 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 3)
p4
p4 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 4)
## 调整数据标签位置
p4 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p4 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 4)
## 调整数据标签位置
p4 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p4 = p4 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 4)
## 调整数据标签位置
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p3 = p3 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 4)
p3
## 调整图例位置
p3 = p3 + theme(legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank())
p3
## 调整图例位置
p3 = p3 + theme(legend.position = "bottom", legend.direction = "horizontal", legend.title = "")
p3
## 调整数据标签位置
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col()
p3 = p3 + geom_text(aes(label = export_label), position = position_stack(vjust = 0.5), size = 4)
## 调整图例位置
p3 = p3 + theme(legend.position = "bottom", legend.direction = "horizontal", legend.title = "")
p3
## 调整图例位置
p3 = p3 + theme(legend.position = "bottom", legend.direction = "horizontal", legend.title = element_blank())
p3
## 调整 x 轴刻度
p3 = p3 + scale_x_continuous(breaks = seq(2006,2015,1))
p3
## 调整坐标轴标签和添加标题
p3 = p3 +
labs(title = "Composition of Exports to China ($)", subtitle = "Source: The Observatory of Economic Complexity") +
labs(x = "Year", y = "USD million")
p3
## 调整颜色配色
fill = c("#E1B378","#5F9EA0")
p3 = p3 + scale_fill_manual(values = fill)
p3
library(showtext)
font_add_google("Gochi Hand", "gochi")
font_add_google("Schoolbell", "bell")
showtext_auto()
fill = c("#4702A1","#227CC9")
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) +
geom_col() +
geom_text(aes(label = export_label), position = position_stack(vjust = 0.5),
size = 3, family = "bell", colour = "white", show.legend = F) +
scale_x_continuous(breaks = seq(2006,2015,1)) +
labs(title = "Composition of Exports to China ($)", subtitle = "Source: The Observatory of Economic Complexity") +
labs(x = "Year", y = "USD million") +
scale_fill_manual(values = fill) +
theme(axis.line.x = element_line(linewidth = .5, colour = "black"), axis.line.y = element_line(size = .5, colour = "black"),
axis.text.x = element_text(colour = "black", size = 10), axis.text.y = element_text(colour = "black", size = 10),
legend.key = element_rect(fill = "white", colour = "white"), legend.position = "bottom", legend.direction = "horizontal",
legend.title = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
plot.title = element_text(family = "bell"),
text = element_text(family = "gochi")) +
guides(fill = guide_legend(reverse = T))
p3
## 使用自定义主题
fill = c("#b2d183","#40b8d0")
p3 = ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col() +
geom_text(aes(label = export_label), position = position_stack(vjust = 0.5),
colour = "black", family = "Tahoma", size = 3, show.legend = F) +
scale_x_continuous(breaks = seq(2006,2015,1)) + labs(title = "Composition of Exports to China ($)", subtitle = "Source: The Observatory of Economic Complexity") +
labs(x = "Year", y = "USD million") +
scale_fill_manual(values = fill) +
theme(panel.border = element_rect(colour = "black", fill = NA, linewidth = .5),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(colour = "black", size = 10),
legend.key = element_rect(fill = "white", colour = "white"),
legend.position = "bottom", legend.direction = "horizontal",
legend.title = element_blank(), panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(), panel.background = element_blank(),
plot.title = element_text(size = 14, family = "Tahoma", face = "bold"),
text = element_text(family = "Tahoma")) +
guides(fill = guide_legend(reverse = T))
p3
ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col() +
geom_text(aes(label = export_label), position = position_stack(vjust = 0.5),
colour = "black", family = "Tahoma", size = 3, show.legend = F) +
scale_x_continuous(breaks = seq(2006,2015,1)) +
labs(title = "Composition of Exports to China ($)", subtitle = "Source: The Observatory of Economic Complexity") +
labs(x = "Year", y = "USD million") +
scale_fill_manual(values = fill)
ggplot(aes(y = export, x = year, fill = fct_rev(product)), data = charts.data) + geom_col() +
geom_text(aes(label = export_label), position = position_stack(vjust = 0.5),
colour = "black", family = "Tahoma", size = 3, show.legend = F) +
scale_x_continuous(breaks = seq(2006,2015,1)) +
labs(title = "Composition of Exports to China ($)", subtitle = "Source: The Observatory of Economic Complexity") +
labs(x = "Year", y = "USD million") +
scale_fill_manual(values = fill) +
theme(panel.border = element_rect(colour = "black", fill = NA, linewidth = .5),
axis.text.x = element_text(colour = "black", size = 10),
axis.text.y = element_text(colour = "black", size = 10),
legend.key = element_rect(fill = "white", colour = "white"),
legend.position = "bottom", legend.direction = "horizontal",
legend.title = element_blank(), panel.grid.major = element_line(colour = "#d3d3d3"),
panel.grid.minor = element_blank(), panel.background = element_blank(),
plot.title = element_text(size = 14, family = "Tahoma", face = "bold"),
text = element_text(family = "Tahoma"))
ggplot(data = iris, mapping = aes(Petal.Length,Petal.Width))
ggplot(data = iris, mapping = aes(Petal.Length,Petal.Width))
ggplot(data = iris, mapping = aes(Petal.Length,Petal.Width)) +
geom_point(size = 2,alpha = 0.5,col ="red")
ggplot(data = iris, mapping = aes(Petal.Length,Petal.Width)) +
geom_point(size = 2,alpha = 0.5,col ="red") +
geom_smooth(method = "lm",se = F)
p3
